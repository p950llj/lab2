tasks.register("spagen", SpagenGenerateTask) {
 group = 'Swedbank'
 description = 'Generate spagen'
 	ext {
		spagen_service_url = 'http://lx70102.sbcore.net:1080/spagen/artifact/'
	}
}


 
import groovy.json.JsonSlurper
class SpagenGenerateTask extends DefaultTask {
 @Input
 def srcDir = getProject().getProjectDir().getAbsolutePath() + "/src/main/java/"
 @Input
 def spagenJsonFile = getProject().getProjectDir().getAbsolutePath() + '/spagen.json'

 @TaskAction
 void generate() {
  try {

   String spagenJson = new File(spagenJsonFile).getText('UTF-8')
   println "Generate artifacts from:\n" + spagenJson
   
   def connection = new URL("$spagen_service_url")
    .openConnection(Proxy.NO_PROXY) as HttpURLConnection

   // set some headers
   connection.setRequestProperty('User-Agent', 'groovy-2.4.4')
   connection.setRequestProperty('Accept', 'application/json')
   connection.setRequestProperty('Content-Type', 'application/json')
   connection.setRequestMethod("POST")
   connection.setUseCaches(false);
   connection.setDoOutput(true);
   connection.setDoInput(true);
   println "Connect to $spagen_service_url"
   BufferedWriter wr = new BufferedWriter(new OutputStreamWriter(connection.getOutputStream()))
   wr.write(spagenJson)
   wr.flush()

   def json = connection.inputStream.withCloseable {
    inStream ->
     new JsonSlurper().parse(inStream as InputStream)
   }

   json.each {
    f ->
     File javaPackaceDir = new File(srcDir, f.dir);
    // println javaPackaceDir
    javaPackaceDir.mkdirs();
    File javaClassFile = new File(javaPackaceDir, f.name);
    println "Write artifact -> " + javaClassFile
    javaClassFile.write(f.artifact, "UTF-8");
   }

  } catch (Exception ex) {
   println(ex);
   ex.printStackTrace();
  }
 }

}